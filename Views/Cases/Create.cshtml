@model CaseLogger3.Models.Case


@{ //How do I make all this invisible to the user "inspecting" my code in browser?
    ViewBag.Title = "Create";

    int intEmpDB_ID = 0;
    int intEmpID = 0;
    string localToday = "nulls";
    int intStdID = 0;
    int superintStdID = 0;
    if (Session["LogEmpDbID"] != null)
    {
        string EmpDB_ID = (string)(Session["LogEmpDbID"]);
        intEmpDB_ID = Convert.ToInt32(EmpDB_ID);
    }
    if (Session["LogEmpID"] != null)
    {
        string EmpID = (string)(Session["LogEmpID"]);
        intEmpID = Convert.ToInt32(EmpID);
    }
    if (Session["LogDate"] != null)
    {
        localToday = (string)(Session["LogDate"]);
    }
    //view data instead of session because different students' data may be passing through here
    if (ViewData["thisSdtID"] != null)
    {
        intStdID = (int)ViewData["thisSdtID"];
        superintStdID = Convert.ToInt32(intStdID);
    }
    
    /*----------------------------------------------------------------------------------------------------------*/
    /* This is my create page. It accepts variables for autofill here and uses them below*/
    /* I populated my drop down list here becuase I'm not sure where else to do so. In the controller? */
    /* When routed from anywhere in the site to here, the Employee ID and date are auto-filled*/
    /* When routed from the Student Lookup page via the 'add case' button, the Student ID is also auto-filled*/
    /* Page is derived from the autogenerated create page which I built on top of */
    /*----------------------------------------------------------------------------------------------------------*/

}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Case</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (intEmpID == 0)
                {
                    @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.TextBoxFor(model => model.EmpID, new { @Value = intEmpID, htmlAttributes = new { @class = "form-control" } })
                }

                @Html.ValidationMessageFor(model => model.EmpID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (superintStdID == 0)
                {
                    @Html.EditorFor(model => model.StudID, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.TextBoxFor(model => model.StudID, new { @Value = superintStdID, htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(model => model.StudID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (localToday == "nulls")
                {
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.TextBoxFor(model => model.Date, new { @Value = localToday, htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "Add/Drop",
                    Value = "Add/Drop"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Registration",
                    Value = "Registration"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Advisement",
                    Value = "Advisement"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Complaint",
                    Value = "Complaint"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "CourseMapping",
                    Value = "Course Mapping"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Other",
                    Value = "Other"
                });
        }

        <div class="form-group">
            @Html.LabelFor(model => model.CaseType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CaseType, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.CaseType, listItems, "-- Select case type -- ")
                @Html.ValidationMessageFor(model => model.CaseType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Outcome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Outcome, new { htmlAttributes = new { @class = "myform-control" } })
                @Html.ValidationMessageFor(model => model.Outcome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


@*Caitlin Boake
    ASP.NET
    5/12/16
    Razor*@